{"version":3,"file":"main.js","mappings":"mBAEgB,ICAD,MACbA,cACEC,KAAKC,YAAcC,SAASC,cAAc,kBAC1CH,KAAKI,YAAcF,SAASC,cAAc,kBAE1CH,KAAKK,aAAe,EACpBL,KAAKM,QAAU,EAEfN,KAAKO,YAAc,EACnBP,KAAKQ,oBAAsB,OAC3BR,KAAKS,uBAAyB,OAE9BT,KAAKU,oBAGPA,oBACEC,OAAOC,iBAAiB,mBAAoBZ,KAAKa,aACjDF,OAAOC,iBAAiB,SAAUZ,KAAKc,UACvCH,OAAOC,iBAAiB,SCpBrB,SAAkBG,EAAIC,GAC3B,IAAIC,GAAQ,EAEZ,MAAO,IAAIC,KACLD,IACJF,KAAMG,GACND,GAAQ,EACRE,YAAW,KACTF,GAAQ,IDYwBG,aAAAA,CAASpB,KAAKqB,WAGlDR,YAAc,KACZb,KAAKsB,kBAEDtB,KAAKK,cAAgB,EACvBL,KAAKuB,uBAAuB,SAE5BvB,KAAKuB,uBAAuB,SAAU,QAI1CT,SAAW,KAGT,GAFAd,KAAKsB,kBAEDtB,KAAKK,cAAgB,EACvBL,KAAKuB,uBAAuB,aAD9B,CAKA,OAAQvB,KAAKQ,qBACX,IAAK,OACHR,KAAKuB,uBAAuB,SAAU,OACtC,MACF,IAAK,KACHvB,KAAKuB,uBAAuB,SAAU,UACtC,MACF,QACE,MAAM,IAAIC,MAAM,4BAGpBxB,KAAKyB,aACLzB,KAAK0B,4BAGPL,SAAW,KACT,GAAuC,UAAnCrB,KAAKC,YAAY0B,MAAMC,SACtB5B,KAAK6B,2BAAV,CAEA,OAAQ7B,KAAKS,wBACX,IAAK,OACHT,KAAKuB,uBAAuB,SAAU,OACtC,MACF,IAAK,KACHvB,KAAKuB,uBAAuB,SAAU,UACtC,MACF,QACE,MAAM,IAAIC,MAAM,4BAGpBxB,KAAKyB,aACLzB,KAAK0B,4BAGPJ,kBACE,MAAMQ,EAAoBC,KAAKC,MAAMhC,KAAKC,YAAYgC,wBAAwBC,QACxEC,EAAiBxB,OAAOyB,YAC9BpC,KAAKK,aAAeyB,EAAoBK,EAG1CV,aACE,MAAMY,EAAc1B,OAAO2B,QACrBC,EAAoBR,KAAKS,IAAIT,KAAKC,MAAMhC,KAAKC,YAAYgC,wBAAwBQ,IACvFzC,KAAKM,QAAU+B,EAAcE,EAG/BV,2BACE7B,KAAK0C,4BACL,MAAMC,EAAS3C,KAAKS,yBAA2BT,KAAKQ,oBAEpD,OADAR,KAAK4C,yBACED,EAGTD,4BACE,MAAMG,EAAiBlC,OAAO2B,QAC9BtC,KAAKS,uBAAyBoC,GAAkB7C,KAAKO,YAAc,OAAS,KAC5EP,KAAKO,YAAcsC,EAGrBD,yBACE5C,KAAKQ,oBAAsBR,KAAKS,uBAGlCc,uBAAuBuB,EAAUC,GAG/B,OAFA/C,KAAKC,YAAY0B,MAAMmB,SAAWA,EAE1BA,GACN,IAAK,QACH9C,KAAKC,YAAY0B,MAAMqB,IAAM,IAC7BhD,KAAKC,YAAY0B,MAAMsB,OAAS,KAChC,MACF,IAAK,SACHjD,KAAKC,YAAY0B,MAAMoB,GAAa,IAAI/C,KAAKK,iBAC7CL,KAAKC,YAAY0B,MAAoB,OAAdoB,EAAqB,OAAS,MAAQ,KAC7D,MACF,QACE,MAAM,IAAIvB,MAAM,qBAItBE,0BACE1B,KAAKI,YAAYuB,MAAMuB,UAAY,GAAGlD,KAAKM,e","sources":["webpack://twitter-cloning/./src/js/main.js","webpack://twitter-cloning/./src/js/components/sidebar.js","webpack://twitter-cloning/./src/js/utils/throttle.js"],"sourcesContent":["import Sidebar from './components/sidebar';\r\n\r\nconst sidebar = new Sidebar();\r\n","import { throttle } from '../utils/throttle';\r\n\r\nexport default class Sidebar {\r\n  constructor() {\r\n    this.sidebarElem = document.querySelector('.page__sidebar');\r\n    this.spacingElem = document.querySelector('.page__spacing');\r\n\r\n    this.stickyMargin = 0;\r\n    this.spacing = 0;\r\n\r\n    this.prevScrollY = 0;\r\n    this.prevScrollDirection = 'down';\r\n    this.currentScrollDirection = 'down';\r\n\r\n    this.setEventListeners();\r\n  }\r\n\r\n  setEventListeners() {\r\n    window.addEventListener('DOMContentLoaded', this.onDOMLoaded);\r\n    window.addEventListener('resize', this.onResize);\r\n    window.addEventListener('scroll', throttle(this.onScroll));\r\n  }\r\n\r\n  onDOMLoaded = () => {\r\n    this.setStickyMargin();\r\n\r\n    if (this.stickyMargin <= 0) {\r\n      this.setSidebarElemPosition('fixed');\r\n    } else {\r\n      this.setSidebarElemPosition('sticky', 'top');\r\n    }\r\n  };\r\n\r\n  onResize = () => {\r\n    this.setStickyMargin();\r\n\r\n    if (this.stickyMargin <= 0) {\r\n      this.setSidebarElemPosition('fixed');\r\n      return;\r\n    }\r\n\r\n    switch (this.prevScrollDirection) {\r\n      case 'down':\r\n        this.setSidebarElemPosition('sticky', 'top');\r\n        break;\r\n      case 'up':\r\n        this.setSidebarElemPosition('sticky', 'bottom');\r\n        break;\r\n      default:\r\n        throw new Error('invalid scroll direction');\r\n    }\r\n\r\n    this.setSpacing();\r\n    this.setSpacingElemMarginTop();\r\n  };\r\n\r\n  onScroll = () => {\r\n    if (this.sidebarElem.style.positon === 'fixed') return;\r\n    if (!this.isScrollDirectionChanged()) return;\r\n\r\n    switch (this.currentScrollDirection) {\r\n      case 'down':\r\n        this.setSidebarElemPosition('sticky', 'top');\r\n        break;\r\n      case 'up':\r\n        this.setSidebarElemPosition('sticky', 'bottom');\r\n        break;\r\n      default:\r\n        throw new Error('invalid scroll direction');\r\n    }\r\n\r\n    this.setSpacing();\r\n    this.setSpacingElemMarginTop();\r\n  };\r\n\r\n  setStickyMargin() {\r\n    const sidebarElemHeight = Math.floor(this.sidebarElem.getBoundingClientRect().height);\r\n    const viewportHeight = window.innerHeight;\r\n    this.stickyMargin = sidebarElemHeight - viewportHeight;\r\n  }\r\n\r\n  setSpacing() {\r\n    const pageYOffset = window.scrollY;\r\n    const sidebarElemOffset = Math.abs(Math.floor(this.sidebarElem.getBoundingClientRect().y));\r\n    this.spacing = pageYOffset - sidebarElemOffset;\r\n  }\r\n\r\n  isScrollDirectionChanged() {\r\n    this.setCurrentScrollDirection();\r\n    const result = this.currentScrollDirection === this.prevScrollDirection ? false : true;\r\n    this.setPrevScrollDirection();\r\n    return result;\r\n  }\r\n\r\n  setCurrentScrollDirection() {\r\n    const currentScrollY = window.scrollY;\r\n    this.currentScrollDirection = currentScrollY >= this.prevScrollY ? 'down' : 'up';\r\n    this.prevScrollY = currentScrollY;\r\n  }\r\n\r\n  setPrevScrollDirection() {\r\n    this.prevScrollDirection = this.currentScrollDirection;\r\n  }\r\n\r\n  setSidebarElemPosition(position, direction) {\r\n    this.sidebarElem.style.position = position;\r\n\r\n    switch (position) {\r\n      case 'fixed':\r\n        this.sidebarElem.style.top = '0';\r\n        this.sidebarElem.style.bottom = null;\r\n        break;\r\n      case 'sticky':\r\n        this.sidebarElem.style[direction] = `-${this.stickyMargin}px`;\r\n        this.sidebarElem.style[direction === 'up' ? 'down' : 'up'] = null;\r\n        break;\r\n      default:\r\n        throw new Error('invalid position');\r\n    }\r\n  }\r\n\r\n  setSpacingElemMarginTop() {\r\n    this.spacingElem.style.marginTop = `${this.spacing}px`;\r\n  }\r\n}\r\n","export function throttle(fn, time) {\r\n  let timer = false;\r\n\r\n  return (...args) => {\r\n    if (timer) return;\r\n    fn(...args);\r\n    timer = true;\r\n    setTimeout(() => {\r\n      timer = false;\r\n    }, time);\r\n  };\r\n}\r\n"],"names":["constructor","this","sidebarElem","document","querySelector","spacingElem","stickyMargin","spacing","prevScrollY","prevScrollDirection","currentScrollDirection","setEventListeners","window","addEventListener","onDOMLoaded","onResize","fn","time","timer","args","setTimeout","throttle","onScroll","setStickyMargin","setSidebarElemPosition","Error","setSpacing","setSpacingElemMarginTop","style","positon","isScrollDirectionChanged","sidebarElemHeight","Math","floor","getBoundingClientRect","height","viewportHeight","innerHeight","pageYOffset","scrollY","sidebarElemOffset","abs","y","setCurrentScrollDirection","result","setPrevScrollDirection","currentScrollY","position","direction","top","bottom","marginTop"],"sourceRoot":""}